
trigger:
  branches:
    include:
    - '*'
    exclude:
    - master
  paths:
    include:
    - docker-multiple-apps/*
    exclude:
    - docker-multiple-apps/*.ymal

# no PR triggers
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  gitRepoName: $(Build.Repository.Name)

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
        $name = $(basename $(gitRepoName))
        Write-Host "##vso[task.setvariable variable=imgRepoName]$name"
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: devopsmanual-acr

- task: Docker@2
  displayName: Build and Push
  inputs:
    containerRegistry: devopsmanual-acr
    repository: $(imgRepoName)
    command: build
    Dockerfile: docker-multiple-apps/Dockerfile
    tags: |
      build-on-agent
      $(Build.BuildId) 

- task: Docker@2
  displayName: Build and Push
  inputs:
    repository: $(imgRepoName)
    command: build
    Dockerfile: docker-multiple-apps/Dockerfile
    tags: |
      build-on-agent-2

- bash: docker image ls

- pwsh: |
    docker search '$(imgRepoName):$(Build.BuildId)'
    $imageId = docker search --format "{{.ImageId}}" '$(imgRepoName):$(Build.BuildId)'
    docker run $imageId

- bash: docker run 'devopsmanual-acr/$(imgRepoName):$(Build.BuildId)'

- task: Docker@2
  displayName: Logout of ACR
  inputs:
    command: logout
    containerRegistry: devopsmanual-acr