# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 5.5.1'
  inputs:
    versionSpec: 5.5.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: 'stackoverflow/01/TestApp/TestApp.sln'

- task: VSBuild@1
  inputs:
    solution: 'stackoverflow/01/**/*.sln'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
    restoreNugetPackages: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.

      $type = '-File'

      echo '$(build.artifactstagingdirectory)'
      Get-ChildItem -Path '$(build.artifactstagingdirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Agent.BuildDirectory)'
      Get-ChildItem -Path '$(Agent.BuildDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Agent.HomeDirectory)'
      Get-ChildItem -Path '$(Agent.HomeDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Agent.TempDirectory)'
      Get-ChildItem -Path '$(Agent.TempDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Agent.ToolsDirectory)'
      Get-ChildItem -Path '$(Agent.ToolsDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Agent.WorkFolder)'
      Get-ChildItem -Path '$(Agent.WorkFolder)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Build.BinariesDirectory)'
      Get-ChildItem -Path '$(Build.BinariesDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Build.SourcesDirectory)'
      Get-ChildItem -Path '$(Build.SourcesDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Build.StagingDirectory)'
      Get-ChildItem -Path '$(Build.StagingDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(Pipeline.Workspace)'
      Get-ChildItem -Path '$(Pipeline.Workspace)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName

      echo '$(System.DefaultWorkingDirectory)'
      Get-ChildItem -Path '$(System.DefaultWorkingDirectory)' -Recurse $type -Force -ErrorAction SilentlyContinue | Select-Object FullName
      echo ' '
      ls '$(build.artifactstagingdirectory)'

- script: |
    echo '$(build.artifactstagingdirectory)'
    ls '$(build.artifactstagingdirectory)'
  displayName: 'Run a multi-line script'
